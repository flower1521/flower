<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.trans.actional.mapper.ClassesMapper">
    <!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
    <resultMap id="ClassResultMap" type="com.trans.actional.model.Classes">
        <id column="id" javaType="java.lang.Integer" property="id" />
        <result column="c_name" javaType="java.lang.String" />
        <association property="teacher" javaType="com.trans.actional.model.Teacher">
            <id property="id" column="t_id" />
            <result property="name" column="t_name" />
        </association>
    </resultMap>

    <!-- 方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集，封装联表查询的数据（去除重复的数据） -->
    <select id="getClass" parameterType="int" resultMap="ClassResultMap">
        select *
		from class c, teacher t
		where c.teacher_id = t.t_id
		and c.c_id = #{id}
    </select>

    <!-- 方式二：嵌套查询：通过执行另外一个sql映射语句来返回预期的复杂类型 -->
    <select id="getClass2" parameterType="int" resultMap="ClassResultMap2">
        select *
        from class where c_id=#{id}
    </select>

    <!-- 使用resultMap映射实体类和字段之间的一一对应关系 -->
    <resultMap id="ClassResultMap2" type="com.trans.actional.model.Classes">
        <id column="id" javaType="java.lang.Integer" property="id" />
        <result column="c_name" javaType="java.lang.String" />
        <association property="teacher" column="teacher_id" select="getTeacher" />
    </resultMap>

    <select id="getTeacher" parameterType="int" resultType="com.trans.actional.model.Teacher">
        select
		t_id id, t_name name
		from teacher
		where t_id=#{id}
    </select>

    <!-- 根据classId查询对应的班级信息，包括学生，老师 -->
    <!-- 方式一：嵌套结果：使用嵌套结果映射来处理重复的联合结果的子集 -->
    <resultMap id="ClassResultMap3" type="com.trans.actional.model.Classes">
        <id column="id" javaType="java.lang.Integer" property="id" />
        <result column="c_name" javaType="java.lang.String" />
        <association property="teacher" javaType="com.trans.actional.model.Teacher">
            <id property="id" column="t_id" />
            <result property="name" column="t_name" />
        </association>
        <collection property="students" ofType="com.trans.actional.model.Student">
            <id property="id" column="s_id" />
            <result property="name" column="s_name" />
        </collection>
    </resultMap>

    <select id="getClass3" parameterType="int" resultMap="ClassResultMap3">
        select * from class c, teacher t, student s
		where c.teacher_id = t.t_id
		and c.c_id = s.class_id
		and c.c_id = #{id}
    </select>

    <!-- 方式二：嵌套查询：通过执行另外一个SQL映射语句来返回预期的复杂类型 -->
    <resultMap id="ClassResultMap4" type="com.trans.actional.model.Classes">
        <id property="id" column="c_id" />
        <result property="name" column="c_name" />
        <association property="teacher" column="teacher_id" javaType="com.trans.actional.model.Teacher" select="getTeacher2" />
        <collection property="students" ofType="com.trans.actional.model.Student" column="c_id" select="getStudent" />
    </resultMap>

    <select id="getTeacher2" parameterType="int" resultType="com.trans.actional.model.Teacher">
        select t_id id, t_name name
        from teacher
        where t_id=#{id}
    </select>

    <select id="getStudent" parameterType="int" resultType="com.trans.actional.model.Student">
        select s_id id, s_name name
        from student
        where class_id = #{id}
    </select>

    <select id="getClass4" parameterType="int" resultMap="ClassResultMap4">
        select * from class
        where c_id = #{id}
    </select>
</mapper>