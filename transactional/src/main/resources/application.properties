server.port=8080

logging.config=classpath:log4j2.xml

#spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#mybatis.config-location=classpath:mybatis/mybatis-config.xml
mybatis.mapper-locations=classpath:mapping/*Mapping.xml
mybatis.type-aliases-package=com.trans.actional.model
##开启mybatis的二级缓存
mybatis.configuration.cache-enabled=true

#showSql
logging.level.com.trans.actional.mapper=debug

#编码格式
#spring.http.encoding.force=true
#spring.http.encoding.charset=UTF-8
#spring.http.encoding.enabled=true
#server.tomcat.uri-encoding=UTF-8

# activemq 的配置
spring.activemq.broker-url=tcp://localhost:61616
# 默认代理URL是否应该在内存中。如果指定了显式代理，则忽略此值
spring.activemq.in-memory=true
# true表示使用连接池；false时，每发送一条数据创建一个连接
#spring.activemq.pool.enabled=true
# 连接池最大连接数
#spring.activemq.pool.max-connections=10
# 空闲的连接过期时间，默认为30秒
#spring.activemq.pool.idle-timeout=30000
# 强制的连接过期时间，与idleTimeout的区别在于：idleTimeout是在连接空闲一段时间失效，而expiryTimeout不管当前连接的情况，只要达到指定时间就失效。默认为0，never
#spring.activemq.pool.expiry-timeout=0
# 是否在回滚消息之前停止消息传递。这意味着当启用此命令时，消息顺序不会被保留。
spring.activemq.non-blocking-redelivery=false
# 等待消息发送响应的时间。设置为0等待永远
spring.activemq.send-timeout=0
# 默认情况下activemq提供的是queue模式，若要使用topic模式需要配置下面配置
spring.jms.pub-sub-domain=false
# 账号
spring.activemq.user=admin
# 密码
spring.activemq.password=admin

spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=

spring.activiti.process-definition-location-prefix=classpath*:/processes/
#Activiti会对数据库中所有的表进行更新，如果表不存在，则Activiti会自动创建
spring.activiti.database-schema-update=true
#保存历史数据级别设置为full最高级别，便于历史数据的追溯
spring.activiti.history-level=full
#关闭activiti自动部署（使用流程设计器部署，不使用具体文件访问方式）
spring.activiti.check-process-definitions=false